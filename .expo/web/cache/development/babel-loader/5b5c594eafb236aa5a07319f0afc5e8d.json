{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nexport default function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      nombre = _useState2[0],\n      setNombre = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      descripcion = _useState4[0],\n      setDescripcion = _useState4[1];\n\n  function postData(data) {\n    var response, json_;\n    return _regeneratorRuntime.async(function postData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(data);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://www.sit-zac.org.mx/guardar_servicio/Api', {\n              method: 'post',\n              body: JSON.stringify(data),\n              headers: {\n                'Content-Type': 'aplication/json, image/png',\n                'Accept': 'application/json, text/plain,image/png, */*'\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json_ = _context.sent;\n            console.log(\"res post:\" + json_.tramite);\n            alert('El servicio se ha guardado correctamente');\n            setNombre(null);\n            setDescripcion(null);\n            navigation.navigate('Inicio');\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.compo\n  }, React.createElement(View, {\n    style: styles.componente\n  }, React.createElement(Text, null, \"Nombre del servicio:\"), React.createElement(TextInput, {\n    style: styles.input,\n    value: nombre,\n    onChangeText: function onChangeText(text) {\n      return setNombre(text);\n    },\n    placeholder: \"Ingrese el nombre del servicio\"\n  })), React.createElement(View, {\n    style: styles.componente\n  }, React.createElement(Text, null, \"Descripci\\xF3n del servicio:\"), React.createElement(TextInput, {\n    style: styles.input,\n    value: descripcion,\n    onChangeText: function onChangeText(text) {\n      return setDescripcion(text);\n    },\n    placeholder: \"Ingrese la descripcion del servicio\"\n  })), React.createElement(View, {\n    style: styles.componente\n  }, React.createElement(Button, {\n    color: \"#A3C0FC\",\n    title: \"Agregar Servicio\",\n    onPress: function onPress() {\n      return postData({\n        nombre: nombre,\n        descripcion: descripcion\n      });\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  lista: {\n    alignSelf: 'stretch'\n  },\n  compo: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#cdcd'\n  },\n  componente: {\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    backgroundColor: '#cdcd',\n    flexDirection: 'column'\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Documents/MAESTRIA EN SISTEMAS/3 SEMESTRE/DISPOSITIVOS MOVILES/APP/Proyecto2/appGeolocal/screens/AddServicio.js"],"names":["React","useState","useEffect","navigation","nombre","setNombre","descripcion","setDescripcion","postData","data","console","log","fetch","method","body","JSON","stringify","headers","response","json","json_","tramite","alert","navigate","styles","compo","componente","input","text","StyleSheet","create","lista","alignSelf","flex","alignItems","justifyContent","backgroundColor","flexDirection","height","margin","borderWidth","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, Button, ActivityIndicator, FlatList, TextInput } from 'react-native';\r\n\r\nexport default function ({ navigation }) {\r\n    const [nombre, setNombre] = useState('');\r\n    const [descripcion, setDescripcion] = useState(null);\r\n\r\n    async function postData(data) {\r\n        console.log(data);\r\n        const response = await fetch('https://www.sit-zac.org.mx/guardar_servicio/Api', {\r\n            method: 'post',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Content-Type': 'aplication/json, image/png',\r\n                'Accept': 'application/json, text/plain,image/png, */*',  // It can be used to overcome cors errors\r\n            },\r\n        });\r\n        const json_ = await response.json();\r\n        console.log(\"res post:\"+json_.tramite);\r\n        alert('El servicio se ha guardado correctamente');\r\n        setNombre(null);\r\n        setDescripcion(null);\r\n        navigation.navigate('Inicio');\r\n        //return json_;\r\n    }\r\n\r\n    return (\r\n\r\n        <View style={styles.compo}>\r\n            <View style={styles.componente}>\r\n                <Text>Nombre del servicio:</Text>\r\n                <TextInput style={styles.input}\r\n                 value={nombre}\r\n                 onChangeText={text => setNombre(text)} \r\n                    placeholder=\"Ingrese el nombre del servicio\"\r\n                />\r\n            </View>\r\n            <View style={styles.componente}>\r\n            <Text>Descripci√≥n del servicio:</Text>\r\n                <TextInput style={styles.input}\r\n                     value={descripcion}\r\n                     onChangeText={text => setDescripcion(text)} \r\n                    placeholder=\"Ingrese la descripcion del servicio\"\r\n                />\r\n            </View>\r\n\r\n            <View style={styles.componente}>\r\n           <Button  \r\n                    color=\"#A3C0FC\"\r\n                    title=\"Agregar Servicio\"\r\n                    onPress={() => postData({ nombre, descripcion })}\r\n                    />\r\n            </View>\r\n\r\n            \r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    lista: {\r\n        alignSelf: 'stretch'\r\n\r\n    },\r\n    compo: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#cdcd',\r\n\r\n    },\r\n    componente: {\r\n        alignItems: 'center',\r\n        justifyContent: 'space-evenly',\r\n        backgroundColor: '#cdcd',\r\n        flexDirection: 'column',\r\n\r\n    },\r\n    input: {\r\n        height: 40,\r\n        margin: 12,\r\n        borderWidth: 1,\r\n        padding: 10,\r\n      },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}