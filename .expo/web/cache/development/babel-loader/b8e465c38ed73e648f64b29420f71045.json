{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ListItem from \"../components/ListItem\";\nexport default function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      cargando = _useState2[0],\n      setCargando = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      users = _useState4[0],\n      setUser = _useState4[1];\n\n  var fetchUser = function fetchUser() {\n    var response, data;\n    return _regeneratorRuntime.async(function fetchUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://jsonplaceholder.typicode.com/users'));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            data = _context.sent;\n            setUser(data);\n            setCargando(false);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    fetchUser();\n  }, []);\n  return React.createElement(View, {\n    style: styles.compo\n  }, cargando ? React.createElement(View, null, React.createElement(Text, null, \"Cargando...\"), React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#000fff\"\n  })) : React.createElement(FlatList, {\n    style: styles.lista,\n    data: users,\n    keyExtractor: function keyExtractor(x) {\n      return x.id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(ListItem, {\n        onPress: function onPress() {\n          return navigation.navigate('Posts', {\n            user_id: item.id,\n            name: item.name\n          });\n        },\n        name: item.name\n      });\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  lista: {\n    alignSelf: 'stretch'\n  },\n  compo: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#cdcd'\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Documents/MAESTRIA EN SISTEMAS/3 SEMESTRE/DISPOSITIVOS MOVILES/APP/Proyecto2/appGeolocal/screens/Contactos.js"],"names":["React","useState","useEffect","ListItem","navigation","cargando","setCargando","users","setUser","fetchUser","fetch","response","json","data","styles","compo","lista","x","id","item","navigate","user_id","name","StyleSheet","create","alignSelf","flex","alignItems","justifyContent","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;AAEA,OAAOC,QAAP;AAEA,eAAe,gBAA0B;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AACrC,kBAAgCH,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOI,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAyBL,QAAQ,CAAC,EAAD,CAAjC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,OAAd;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACSC,KAAK,CAAC,4CAAD,CADd;;AAAA;AACRC,YAAAA,QADQ;AAAA;AAAA,6CAEKA,QAAQ,CAACC,IAAT,EAFL;;AAAA;AAERC,YAAAA,IAFQ;AAGdL,YAAAA,OAAO,CAACK,IAAD,CAAP;AACAP,YAAAA,WAAW,CAAC,KAAD,CAAX;;AAJc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAOAJ,EAAAA,SAAS,CAAC,YAAM;AACZO,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;AAMA,SAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACC;AAApB,KACKV,QAAQ,GAAG,oBAAC,IAAD,QACR,oBAAC,IAAD,sBADQ,EAER,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAC;AAAtC,IAFQ,CAAH,GAIL,oBAAC,QAAD;AACI,IAAA,KAAK,EAAES,MAAM,CAACE,KADlB;AAEI,IAAA,IAAI,EAAET,KAFV;AAGI,IAAA,YAAY,EAAE,sBAAAU,CAAC;AAAA,aAAIA,CAAC,CAACC,EAAN;AAAA,KAHnB;AAII,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,aAAc,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE;AAAA,iBAAKf,UAAU,CAACgB,QAAX,CAAoB,OAApB,EAA4B;AAACC,YAAAA,OAAO,EAAEF,IAAI,CAACD,EAAf;AAAmBI,YAAAA,IAAI,EAAEH,IAAI,CAACG;AAA9B,WAA5B,CAAL;AAAA,SAAnB;AAC1B,QAAA,IAAI,EAAEH,IAAI,CAACG;AADe,QAAd;AAAA;AAJhB,IALR,CAFJ;AAiBH;AAED,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,KAAK,EAAE;AACHS,IAAAA,SAAS,EAAC;AADP,GADsB;AAK7BV,EAAAA,KAAK,EAAE;AACHW,IAAAA,IAAI,EAAE,CADH;AAEHC,IAAAA,UAAU,EAAE,QAFT;AAGHC,IAAAA,cAAc,EAAE,QAHb;AAIHC,IAAAA,eAAe,EAAE;AAJd;AALsB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, Button, ActivityIndicator, FlatList } from 'react-native';\r\nimport ListItem from '../components/ListItem';\r\n\r\nexport default function ({ navigation }) {\r\n    const [cargando, setCargando] = useState(true)\r\n    const [users, setUser] = useState([])\r\n\r\n    const fetchUser = async () => {\r\n        const response = await fetch('https://jsonplaceholder.typicode.com/users')\r\n        const data = await response.json()\r\n        setUser(data)\r\n        setCargando(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchUser()\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n\r\n        <View style={styles.compo}>\r\n            {cargando ? <View>\r\n                <Text>Cargando...</Text>\r\n                <ActivityIndicator size='large' color='#000fff'></ActivityIndicator>\r\n            </View> :\r\n                <FlatList\r\n                    style={styles.lista}\r\n                    data={users}\r\n                    keyExtractor={x => x.id}\r\n                    renderItem={({ item }) => <ListItem onPress={() =>navigation.navigate('Posts',{user_id: item.id, name: item.name})}\r\n                    name={item.name} />}\r\n                />\r\n            }\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    lista: {\r\n        alignSelf:'stretch'\r\n\r\n    },\r\n    compo: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#cdcd',\r\n\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}