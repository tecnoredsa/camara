{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Mapa from \"../components/Mapa\";\nexport default function Maps(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var _route$params = route.params,\n      user_id = _route$params.user_id,\n      name = _route$params.name;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      coordenadas = _useState2[0],\n      setCoords = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cargando = _useState4[0],\n      setCargando = _useState4[1];\n\n  var fetchUser = function fetchUser(id) {\n    var response, data;\n    return _regeneratorRuntime.async(function fetchUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://jsonplaceholder.typicode.com/users/' + id));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            data = _context.sent;\n            console.log(data.address.geo);\n            setCoords(data.address.geo);\n            setCargando(false);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    fetchUser(user_id);\n  }, []);\n  return React.createElement(View, {\n    style: styles.compo\n  }, cargando ? React.createElement(View, null, React.createElement(Text, null, \"Cargando...\"), React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#000fff\"\n  })) : React.createElement(View, {\n    style: styles.compo\n  }, React.createElement(Text, {\n    style: styles.texto\n  }, \"Mostrando la ubicaci\\xF3n de:\", JSON.stringify(name)), React.createElement(Text, null, \"Latitud : \", coordenadas.lat, \" Longitud : \", coordenadas.lng), React.createElement(Mapa, {\n    puntos: coordenadas,\n    name: name\n  }), React.createElement(Button, {\n    style: styles.boton,\n    title: \"Regresar\",\n    onPress: function onPress() {\n      return navigation.goBack();\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#cdcd',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  compo: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    backgroundColor: '#cdcd'\n  },\n  boton: {\n    backgroundColor: 'red',\n    width: 80,\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 10,\n    borderRadius: 50\n  },\n  texto: {\n    fontSize: 25,\n    color: 'black',\n    marginBottom: 15\n  },\n  textobody: {\n    fontSize: 30,\n    color: 'green',\n    marginBottom: 15,\n    borderWidth: 1\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Documents/MAESTRIA EN SISTEMAS/3 SEMESTRE/DISPOSITIVOS MOVILES/APP/Proyecto2/appGeolocal/screens/Maps.js"],"names":["React","useState","useEffect","Mapa","Maps","route","navigation","params","user_id","name","coordenadas","setCoords","cargando","setCargando","fetchUser","id","fetch","response","json","data","console","log","address","geo","styles","compo","texto","JSON","stringify","lat","lng","boton","goBack","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","width","height","marginBottom","borderRadius","fontSize","color","textobody","borderWidth","input","margin","padding"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;AAEA,OAAOC,IAAP;AAEA,eAAe,SAASC,IAAT,OAAqC;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAChD,sBAA0BD,KAAK,CAACE,MAAhC;AAAA,MAAQC,OAAR,iBAAQA,OAAR;AAAA,MAAiBC,IAAjB,iBAAiBA,IAAjB;;AACA,kBAAiCR,QAAQ,CAAC,EAAD,CAAzC;AAAA;AAAA,MAAOS,WAAP;AAAA,MAAoBC,SAApB;;AACA,mBAAgCV,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOW,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACSC,KAAK,CAAC,gDAAgDD,EAAjD,CADd;;AAAA;AACRE,YAAAA,QADQ;AAAA;AAAA,6CAEKA,QAAQ,CAACC,IAAT,EAFL;;AAAA;AAERC,YAAAA,IAFQ;AAGdC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,OAAL,CAAaC,GAAzB;AACAZ,YAAAA,SAAS,CAACQ,IAAI,CAACG,OAAL,CAAaC,GAAd,CAAT;AACAV,YAAAA,WAAW,CAAC,KAAD,CAAX;;AALc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AASAX,EAAAA,SAAS,CAAC,YAAM;AACZY,IAAAA,SAAS,CAACN,OAAD,CAAT;AACH,GAFQ,EAEN,EAFM,CAAT;AAKA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEgB,MAAM,CAACC;AAApB,KACKb,QAAQ,GAAG,oBAAC,IAAD,QACR,oBAAC,IAAD,sBADQ,EAER,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAC;AAAtC,IAFQ,CAAH,GAKL,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEY,MAAM,CAACC;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,sCAAsDC,IAAI,CAACC,SAAL,CAAenB,IAAf,CAAtD,CADJ,EAEI,oBAAC,IAAD,sBAAkBC,WAAW,CAACmB,GAA9B,kBAA+CnB,WAAW,CAACoB,GAA3D,CAFJ,EAGI,oBAAC,IAAD;AACI,IAAA,MAAM,EAAEpB,WADZ;AAEI,IAAA,IAAI,EAAED;AAFV,IAHJ,EAOI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAEe,MAAM,CAACO,KADlB;AAEI,IAAA,KAAK,EAAC,UAFV;AAGI,IAAA,OAAO,EAAE;AAAA,aAAMzB,UAAU,CAAC0B,MAAX,EAAN;AAAA;AAHb,IAPJ,CANR,CADJ;AAsBH;AAED,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,OAFV;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT,GADkB;AAO7Bd,EAAAA,KAAK,EAAE;AACHW,IAAAA,IAAI,EAAE,CADH;AAEHE,IAAAA,UAAU,EAAE,QAFT;AAGHC,IAAAA,cAAc,EAAE,YAHb;AAIHF,IAAAA,eAAe,EAAE;AAJd,GAPsB;AAc7BN,EAAAA,KAAK,EAAE;AACHM,IAAAA,eAAe,EAAE,KADd;AAEHG,IAAAA,KAAK,EAAE,EAFJ;AAGHC,IAAAA,MAAM,EAAE,EAHL;AAIHH,IAAAA,UAAU,EAAE,QAJT;AAKHC,IAAAA,cAAc,EAAE,QALb;AAMHG,IAAAA,YAAY,EAAE,EANX;AAOHC,IAAAA,YAAY,EAAE;AAPX,GAdsB;AAwB7BjB,EAAAA,KAAK,EAAE;AACHkB,IAAAA,QAAQ,EAAE,EADP;AAEHC,IAAAA,KAAK,EAAE,OAFJ;AAGHH,IAAAA,YAAY,EAAE;AAHX,GAxBsB;AA8B7BI,EAAAA,SAAS,EAAE;AACPF,IAAAA,QAAQ,EAAE,EADH;AAEPC,IAAAA,KAAK,EAAE,OAFA;AAGPH,IAAAA,YAAY,EAAE,EAHP;AAIPK,IAAAA,WAAW,EAAE;AAJN,GA9BkB;AAqC7BC,EAAAA,KAAK,EAAE;AACHP,IAAAA,MAAM,EAAE,EADL;AAEHQ,IAAAA,MAAM,EAAE,EAFL;AAGHF,IAAAA,WAAW,EAAE,CAHV;AAIHG,IAAAA,OAAO,EAAE;AAJN;AArCsB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, Button, ActivityIndicator, FlatList, TextInput } from 'react-native';\r\nimport Mapa from '../components/Mapa';\r\n\r\nexport default function Maps({ route, navigation }) {\r\n    const { user_id, name } = route.params\r\n    const [coordenadas, setCoords] = useState([])\r\n    const [cargando, setCargando] = useState(true)\r\n\r\n    const fetchUser = async (id) => {\r\n        const response = await fetch('https://jsonplaceholder.typicode.com/users/' + id)\r\n        const data = await response.json()\r\n        console.log(data.address.geo);\r\n        setCoords(data.address.geo)\r\n        setCargando(false)\r\n        //setCargando(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchUser(user_id)\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <View style={styles.compo}>\r\n            {cargando ? <View>\r\n                <Text>Cargando...</Text>\r\n                <ActivityIndicator size='large' color='#000fff'></ActivityIndicator>\r\n            </View>\r\n                :\r\n                <View style={styles.compo}>\r\n                    <Text style={styles.texto}>Mostrando la ubicaci√≥n de:{JSON.stringify(name)}</Text>\r\n                    <Text >Latitud : {coordenadas.lat} Longitud : {coordenadas.lng}</Text>\r\n                    <Mapa\r\n                        puntos={coordenadas}\r\n                        name={name}\r\n                    />\r\n                    <Button\r\n                        style={styles.boton}\r\n                        title=\"Regresar\"\r\n                        onPress={() => navigation.goBack()} />\r\n                </View>\r\n            }\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#cdcd',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    compo: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        backgroundColor: '#cdcd',\r\n\r\n    },\r\n    boton: {\r\n        backgroundColor: 'red',\r\n        width: 80,\r\n        height: 40,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginBottom: 10,\r\n        borderRadius: 50,\r\n\r\n    },\r\n    texto: {\r\n        fontSize: 25,\r\n        color: 'black',\r\n        marginBottom: 15,\r\n\r\n    },\r\n    textobody: {\r\n        fontSize: 30,\r\n        color: 'green',\r\n        marginBottom: 15,\r\n        borderWidth: 1,\r\n\r\n    },\r\n    input: {\r\n        height: 40,\r\n        margin: 12,\r\n        borderWidth: 1,\r\n        padding: 10,\r\n    },\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"module"}