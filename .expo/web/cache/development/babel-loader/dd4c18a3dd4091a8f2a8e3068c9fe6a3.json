{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nexport default function PostsDetail(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var _route$params = route.params,\n      post_id = _route$params.post_id,\n      title = _route$params.title;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      post = _useState2[0],\n      setPost = _useState2[1];\n\n  var fetchUser = function fetchUser(id) {\n    var response, data;\n    return _regeneratorRuntime.async(function fetchUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://jsonplaceholder.typicode.com/posts/' + id));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            data = _context.sent;\n            console.log(data);\n            setPost(data);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    fetchUser(post_id);\n  }, []);\n  return React.createElement(View, {\n    style: styles.compo\n  }, React.createElement(Text, {\n    style: styles.texto\n  }, \"Nombre de el post\"), React.createElement(Text, {\n    style: styles.textobody\n  }, post.title), React.createElement(Text, {\n    style: styles.texto\n  }, \"Texto del post:\"), React.createElement(Text, {\n    style: styles.textobody\n  }, post.body), React.createElement(Button, {\n    style: styles.boton,\n    title: \"Regresar\",\n    onPress: function onPress() {\n      return navigation.goBack();\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#cdcd',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  compo: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    backgroundColor: '#cdcd'\n  },\n  boton: {\n    backgroundColor: 'red',\n    width: 80,\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 10,\n    borderRadius: 50\n  },\n  texto: {\n    fontSize: 25,\n    color: 'black',\n    marginBottom: 15\n  },\n  textobody: {\n    fontSize: 30,\n    color: 'green',\n    marginBottom: 15,\n    borderWidth: 1\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Documents/MAESTRIA EN SISTEMAS/3 SEMESTRE/DISPOSITIVOS MOVILES/APP/Proyecto2/appGeolocal/screens/PostsDetail.js"],"names":["React","useState","useEffect","PostsDetail","route","navigation","params","post_id","title","post","setPost","fetchUser","id","fetch","response","json","data","console","log","styles","compo","texto","textobody","body","boton","goBack","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","width","height","marginBottom","borderRadius","fontSize","color","borderWidth","input","margin","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, Button, ActivityIndicator, FlatList,TextInput } from 'react-native';\r\n\r\nexport default  function PostsDetail({route, navigation }) {\r\n    const {post_id, title} = route.params\r\n    const [post, setPost] = useState([])\r\n\r\n    const fetchUser = async (id) => {\r\n        const response = await fetch('https://jsonplaceholder.typicode.com/posts/'+id)\r\n        const data = await response.json()\r\n        console.log(data);\r\n        setPost(data)\r\n        //setCargando(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchUser(post_id )\r\n    }, [])\r\n\r\n\r\n    return (\r\n      <View style={styles.compo}>\r\n       <Text style={styles.texto}>Nombre de el post</Text>\r\n        <Text style={styles.textobody}>{post.title}</Text>\r\n       <Text style={styles.texto}>Texto del post:</Text>\r\n       <Text style={styles.textobody}>{post.body}</Text>\r\n    \r\n\r\n        <Button\r\n        style={styles.boton}\r\n          title=\"Regresar\"\r\n          onPress={() => navigation.goBack()} />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#cdcd',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    compo: {\r\n      flex: 1,\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-start',\r\n      backgroundColor: '#cdcd',\r\n  \r\n    },\r\n    boton: {\r\n      backgroundColor: 'red',\r\n      width: 80,\r\n      height: 40,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      marginBottom: 10,\r\n      borderRadius: 50,\r\n  \r\n    },\r\n    texto: {\r\n      fontSize: 25,\r\n      color: 'black',\r\n      marginBottom: 15,\r\n  \r\n    },\r\n    textobody: {\r\n        fontSize: 30,\r\n        color: 'green',\r\n        marginBottom: 15,\r\n        borderWidth: 1,\r\n    \r\n      },\r\n    input: {\r\n        height: 40,\r\n        margin: 12,\r\n        borderWidth: 1,\r\n        padding: 10,\r\n      },\r\n  \r\n  });\r\n  "]},"metadata":{},"sourceType":"module"}