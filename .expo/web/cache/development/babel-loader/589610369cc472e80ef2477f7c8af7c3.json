{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport { NativeAppEventEmitter } from \"react-native-web/dist/index\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar JDtest = function (_PureComponent) {\n  _inherits(JDtest, _PureComponent);\n\n  var _super = _createSuper(JDtest);\n\n  function JDtest(props) {\n    var _this;\n\n    _classCallCheck(this, JDtest);\n\n    _this = _super.call(this, props);\n\n    _this.translateX = function () {\n      _this.state.yPosition = _this.state.yPosition == 0.0 ? 1.0 : 0.0;\n      Animated.timing(_this.state.animValue, {\n        toValue: _this.state.yPosition,\n        duración: 200\n      }).start();\n      var opacity = _this.state.opacity === 'rgba(0, 0, 0, 0.3)' ? 'rgba(0, 0, 0, 0)' : 'rgba(0, 0, 0, 0.3)';\n\n      _this.setState({\n        opacity: opacity\n      });\n    };\n\n    _this.state = {\n      fadeInOpacity: new Animated.Value(0),\n      animValue: new Animated.Value(1),\n      yPosition: 0.0,\n      fadeAnim: new Animated.Value(1.0),\n      opacity: 'rgba(0, 0, 0, 0.3)'\n    };\n    return _this;\n  }\n\n  _createClass(JDtest, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.translateX(this.callbackfun.bind(this));\n    }\n  }, {\n    key: \"callbackfun\",\n    value: function callbackfun() {\n      console.log('0000000');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: [styles.container, {}]\n      }, React.createElement(TouchableOpacity, {\n        activeOpacity: 1,\n        onPress: function onPress() {\n          _this2.translateX();\n        },\n        style: {\n          width: width,\n          height: JDDevice.getRpx(88),\n          backgroundColor: 'red',\n          zIndex: 100\n        }\n      }, React.createElement(Text, null, \"'11111111'\")), React.createElement(Animated.View, {\n        style: {\n          width: JDDevice.getRpx(500),\n          height: JDDevice.getRpx(600),\n          backgroundColor: 'red',\n          position: 'absolute',\n          top: -JDDevice.getRpx(600),\n          zIndex: 4,\n          transform: [{\n            translateY: this.state.animValue.interpolate({\n              inputRange: [0, 1],\n              outputRange: [JDDevice.getRpx(600), 0]\n            })\n          }]\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.translateX();\n        },\n        style: {\n          width: width,\n          height: height,\n          backgroundColor: this.state.opacity,\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          zIndex: 0\n        }\n      }));\n    }\n  }]);\n\n  return JDtest;\n}(PureComponent);\n\nexport { JDtest as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'pink'\n  },\n  iamge: {\n    width: 100,\n    height: 100,\n    backgroundColor: 'pink',\n    marginTop: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Documents/MAESTRIA EN SISTEMAS/3 SEMESTRE/DISPOSITIVOS MOVILES/APP/Proyecto2/appGeolocal/src/JuicioLinea/Linea.js"],"names":["React","PureComponent","NativeAppEventEmitter","Dimensions","get","width","height","JDtest","props","translateX","state","yPosition","Animated","timing","animValue","toValue","duración","start","opacity","setState","fadeInOpacity","Value","fadeAnim","callbackfun","bind","console","log","styles","container","JDDevice","getRpx","backgroundColor","zIndex","position","top","transform","translateY","interpolate","inputRange","outputRange","left","StyleSheet","create","flex","iamge","marginTop"],"mappings":"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","sourcesContent":["/**\r\n * Created by Dongtao on 02/07/2018.\r\n */\r\n import React, {PureComponent} from 'react'\r\n import {\r\n     View,\r\n     StyleSheet,\r\n     Platform,\r\n     FlatList,\r\n     Dimensions,\r\n     TouchableOpacity,\r\n     ScrollView,\r\n     AppState,\r\n     NativeAppEventEmitter,\r\n     Animated,\r\n     Text\r\n } from 'react-native';\r\n  \r\n const { width,height } = Dimensions.get('window');\r\n export default class JDtest extends PureComponent {\r\n     constructor(props) {\r\n         super(props);\r\n  \r\n         this.state={\r\n             fadeInOpacity: new Animated.Value (0), // Inicializar un objeto de animación\r\n             animValue: new Animated.Value(1),\r\n                          yPosition: 0.0, // Bit de bandera, registra el valor actual\r\n  \r\n             fadeAnim: new Animated.Value(1.0),\r\n             opacity:'rgba(0, 0, 0, 0.3)'\r\n         }\r\n     }\r\n  \r\n     componentDidMount() {\r\n         this.translateX(this.callbackfun.bind(this))\r\n     }\r\n  \r\n  \r\n     callbackfun(){\r\n         console.log('0000000')\r\n     }\r\n  \r\n     render (){\r\n         return (\r\n             <View style={[styles.container,{\r\n  \r\n             }]}>\r\n  \r\n  \r\n                 <TouchableOpacity activeOpacity = {1}\r\n                     onPress={()=>{this.translateX()}}\r\n                     style={{width:width,height:JDDevice.getRpx(88),backgroundColor:'red', zIndex:100,}}>\r\n                     <Text>'11111111'</Text>\r\n                 </TouchableOpacity>\r\n                 <Animated.View style={{\r\n                     width:JDDevice.getRpx(500),\r\n                     height:JDDevice.getRpx(600),\r\n                     backgroundColor:'red',\r\n                     position:'absolute',\r\n                     top:-JDDevice.getRpx(600),\r\n                     zIndex:4,\r\n                     /*\r\n                                            2. Vincula el valor de la animación al atributo de estilo.\r\n                      * */\r\n                     transform:[\r\n                         {\r\n                             translateY: this.state.animValue.interpolate({\r\n                                 inputRange: [0, 1],\r\n                                                                  outputRange: [JDDevice.getRpx (600), 0] // Interpolación lineal, 0 corresponde a -100, 1 corresponde a 0\r\n                             })\r\n                         },\r\n  \r\n                     ]\r\n                 }}>\r\n                 </Animated.View>\r\n                 <TouchableOpacity\r\n                     onPress={()=>{this.translateX()}}\r\n                     style={{width:width,height:height,\r\n                     backgroundColor:this.state.opacity,position:'absolute',top:0,left:0,\r\n                 zIndex:0}}></TouchableOpacity>\r\n             </View>\r\n         )\r\n     }\r\n  \r\n     translateX=()=>{\r\n  \r\n         this.state.yPosition = this.state.yPosition == 0.0 ? 1.0 : 0.0;\r\n  \r\n         Animated.timing(this.state.animValue, {\r\n                          toValue: this.state.yPosition, // valor objetivo\r\n                          duración: 200, // tiempo de animación\r\n                          // easing: Easing.linear // función de suavizado\r\n         }).start();\r\n  \r\n         let opacity = this.state.opacity === 'rgba(0, 0, 0, 0.3)'?'rgba(0, 0, 0, 0)':'rgba(0, 0, 0, 0.3)'\r\n         this.setState({\r\n             opacity\r\n         })\r\n     }\r\n  \r\n  \r\n  \r\n  \r\n }\r\n  \r\n const styles  = StyleSheet.create({\r\n     container:{\r\n         flex:1,\r\n         backgroundColor:'pink'\r\n     },\r\n     iamge:{\r\n         width:100,\r\n         height:100,\r\n         backgroundColor:'pink',\r\n         marginTop:20\r\n     }\r\n  \r\n })\r\n  \r\n //     <View style={{width:30,height:30,backgroundColor:'red'}}></View>\r\n //\r\n // <Animated.View style={{\r\n //     width:JDDevice.getRpx(100),\r\n //     height:JDDevice.getRpx(100),\r\n //     backgroundColor:'pink',\r\n //     /*\r\n  // 2. Vincula el valor de la animación al atributo de estilo\r\n //      * */\r\n //     opacity: this.state.fadeInOpacity\r\n // }}>\r\n // </Animated.View>\r\n "]},"metadata":{},"sourceType":"module"}